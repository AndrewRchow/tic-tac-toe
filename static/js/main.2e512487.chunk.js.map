{"version":3,"sources":["index.js"],"names":["Square","index","_this","this","isWinningSquare","props","winSeq","keyProp","includes","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","React","Component","Board","i","_this2","key","squares","renderSquare","Game","_this3","Object","C_Users_achow_Documents_REPOS_GITHUB_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_achow_Documents_REPOS_GITHUB_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_achow_Documents_REPOS_GITHUB_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","isDraw","slice","length","calculateWinner","setState","concat","step","status","_this4","current","winner","moves","map","move","desc","jumpTo","player","handleClick","sequence","lines","_lines$i","C_Users_achow_Documents_REPOS_GITHUB_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e512487.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n\n  \n  render() {\n    let isWinningSquare = false;\n    if(this.props.winSeq) {\n      isWinningSquare = elementInArray(this.props.keyProp, this.props.winSeq);\n    }\n\n    return (\n      <button\n        className={'square ' + (isWinningSquare ? 'winningSquare' : '')} \n        onClick={() => this.props.onClick()}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square\n      key={i} keyProp={i}\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n      winSeq={this.props.winSeq}/>;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDraw: false\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n      isDraw: history.length === 9 ? true : false\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n      isDraw: false\n    })\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const isDraw = this.state.isDraw;\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      )\n    })\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner.player;\n    } else if (isDraw) {\n      status = 'Draw';\n    }\n    else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n            winSeq={winner.sequence} />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        sequence: [a, b, c]\n      }\n    }\n  }\n  return \"\";\n}\n\nfunction elementInArray(index, array) {\n  if(array.includes(index)){\n    return true;\n  }else{\n    return false;\n  }\n}"],"sourceRoot":""}